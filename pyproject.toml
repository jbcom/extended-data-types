[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.run]
branch = true
relative_files = true
omit = [
    ".tox/*",
    "tests/*",
]

[tool.poetry]
name = "extended-data-types"
version = "0.1.0"
description = "Extended functionality for data types"
authors = ["Jon Bogaty <jon@jonbogaty.com>", ]
maintainers = ["Jon Bogaty <jon@jonbogaty.com>", ]
packages = [{ include = "extended_data_types" }]

include = ["CHANGELOG.md", "LICENSE", "py.typed", ]
license = "MIT"
readme = "README.md"

homepage = "https://pypi.org/project/extended-data-types/"
repository = "https://github.com/jbcom/extended-data-types"
documentation = "https://github.com/jbcom/extended-data-types/tree/main/docs"

keywords = [
    "python3",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Typing :: Typed",
]

[tool.poetry.urls]
"Tracker" = "https://github.com/jbcom/extended-data-types/issues"
"Changelog" = "https://github.com/jbcom/extended-data-types/blob/main/CHANGELOG.md"

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
requests = "^2.32.3"
more-itertools = "^10.3.0"
python-hcl2 = "^4.3.4"
validators = "^0.33.0"
inflection = "^0.5.1"
orjson = "^3.10.6"
sortedcontainers = "^2.4.0"
numpy = "^2.0.0"
wrapt = "^1.16.0"
pyyaml = "^6.0.1"
future = "^1.0.0"

[tool.poetry.group.dev.dependencies]
mypy = "^1.11.0"
types-pyyaml = "^6.0.12.20240311"
sortedcontainers-stubs = "^2.4.2"
autoimport = "^1.6.0"
black = "^24.4.2"
isort = "^5.13.2"
pytest = "^8.3.1"
pytest-cov = "^5.0.0"
sphinx = "^7.4.6"
sphinx-rtd-theme = "^2.0.0"
python-semantic-release = "^9.8.5"
sphinx-autodoc2 = "^0.5.0"
tox = "^4.16.0"
tox-gh = "^1.3.2"
autoflake = "^2.3.1"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = """
--doctest-modules \
--cov=./ \
--cov-append \
--cov-report term \
--ignore=docs/
"""
testpaths = [
    "tests",
]

[tool.sphinx-pyproject]
extensions = []
templates_path = ['_templates']
exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store']
html_theme = 'rtd'
html_static_path = ['_static']

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']

[tool.isort]
profile = "black"

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if TYPE_CHECKING:",
    "if __name__ == .__main__.:"
]

[tool.coverage.html]
directory = "coverage_html_report"

[mypy.coverage]
ignore_errors = true

[mypy.black]
check_untyped_defs = true

[mypy.isort]
check_untyped_defs = true

[mypy]
custom_typeshed_dir = "py.typed"

[tool.semantic_release]
version_variable = ["extended_data_types/__init__.py:__version__"]
branch = "main"
changelog_file = "CHANGELOG.md"
upload_to_pypi = true
assets = []
build_command_env = []
commit_message = "Release version {version}\n\nChanges:\n\n{changelog}"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
no_git_verify = false
tag_format = "v{version}"

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
template_dir = "templates"
exclude_commit_patterns = []

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "Jon Bogaty <jon@jonbogaty.com>"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
default_bump_level = 0

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false
insecure = false

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true
