name: Publish Package

on:
  push:
    branches:
      - main

jobs:
  ci:
    uses: ./.github/workflows/ci.yml

  release-build:
    runs-on: ubuntu-latest
    concurrency: release
    permissions:
      id-token: write
      contents: write
    needs:
      - ci
    outputs:
      released: ${{ steps.release.outputs.released }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'poetry'
      - name: Build release distributions
        run: make build
      - name: Python Semantic Release
        id: release
        uses: python-semantic-release/python-semantic-release@v9.8.6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish package to GitHub Release
        uses: python-semantic-release/upload-to-gh-release@v9.8.6
        if: steps.release.outputs.released == 'true'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.release.outputs.tag }}
      - name: Upload distributions
        uses: actions/upload-artifact@v4
        if: steps.release.outputs.released == 'true'
        with:
          name: release-dists
          path: dist/

  test-pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build
    if: needs.release-build.outputs.released == 'true'
    environment: Testing
    permissions:
      id-token: write

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - test-pypi-publish
    environment: Production
    permissions:
      id-token: write

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
