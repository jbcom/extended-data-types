name: CI

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

jobs:
  build-package:
    name: Build & verify package
    runs-on: ubuntu-24.04
    outputs:
      python-versions: ${{ steps.baipp.outputs.supported_python_classifiers_json_array }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: hynek/build-and-inspect-python-package@v2
        id: baipp

  tests:
    name: Tests on ${{ matrix.python-version }}
    runs-on: ubuntu-24.04
    needs: build-package
    strategy:
      fail-fast: false
      matrix:
        python-version: ${{ fromJson(needs.build-package.outputs.python-versions) }}

    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}
          pyproject-file: "pyproject.toml"
          enable-cache: true
          cache-dependency-glob: "**/pyproject.toml"
      - name: Download pre-built packages
        uses: actions/download-artifact@v4
        with:
          name: Packages
          path: dist
      - run: ls -lhat dist/
      - name: Run tests
        run: uvx --with tox-uv tox run --installpkg dist/*.whl
      - name: Upload coverage data
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data-${{ matrix.python-version }}
          path: .coverage.*
          include-hidden-files: true
          if-no-files-found: error

  typechecking:
    name: Typechecking
    runs-on: ubuntu-24.04
    needs: build-package

    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          pyproject-file: "pyproject.toml"
          python-version: "3.12"
          enable-cache: true
          cache-dependency-glob: "**/pyproject.toml"
      - name: Download pre-built packages
        uses: actions/download-artifact@v4
        with:
          name: Packages
          path: dist
      - run: ls -lhat dist/
      - name: Typechecking with pyright
        run: uvx --with tox-uv tox run -e pyright --installpkg dist/*.whl

  linting:
    name: Lint checks
    runs-on: ubuntu-24.04
    needs: build-package

    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          pyproject-file: "pyproject.toml"
          python-version: "3.12"
          enable-cache: true
          cache-dependency-glob: "**/pyproject.toml"
      - name: Download pre-built packages
        uses: actions/download-artifact@v4
        with:
          name: Packages
          path: dist
      - run: ls -lhat dist/
      - name: Lint checks with precommit
        run: uvx --with tox-uv tox run -e pre-commit --installpkg dist/*.whl

  coverage:
    name: Ensure test coverage
    runs-on: ubuntu-24.04
    needs: tests

    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          pyproject-file: "pyproject.toml"
          python-version: "3.12"
          enable-cache: true
          cache-dependency-glob: "**/pyproject.toml"
      - name: Download coverage data
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-data-*
          merge-multiple: true
      - name: Combine coverage and fail if it's <75%.
        run: |
          uv tool install coverage

          coverage combine
          coverage html --skip-covered --skip-empty

          # Report and write to summary.
          coverage report --format=markdown >> $GITHUB_STEP_SUMMARY

          # Report again and fail if under 75%.
          coverage report --fail-under=75
      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        with:
          name: html-report
          path: htmlcov
